--Recherche de prestations producteur
--SELECT COUNT(DISTINCT AFF_T_DISCO)
SELECT AFF_T_DISCO, PDM_ID
--SELECT *
FROM AFFAIRE.AFFAIRE aff
JOIN CONTRAT.PRESTATION p ON p.PRS_ID = aff.PRS_ID
WHERE PDM_ID IS NOt NULL
AND p.PRS_C_CODE = 'P120B'
--AND PDM_ID LIKE '015%'
AND AFF_D_CREATION > '01/06/2014'
;

--------------------------------------Habilitations-----------------------------------------
--Récupérations des rôles métiers pouvant traiter les taches en libre service à partir d'un numéro de dossier
SELECT DISTINCT ROL_T_LIB
FROM AFFAIRE.TACHE tache
JOIN AFFAIRE.AFFAIRE aff ON aff.AFF_ID = tache.AFF_ID
JOIN AFFAIRE.ASS_TAC_ENT_ROL ater on ater.TAC_ID = tache.TAC_ID
JOIN UTILISATEUR.ROLE rol ON rol.ROL_ID = ater.ROL_METIER_ID
WHERE aff.AFF_T_DISCO = 'A02G0HMQ'
;

--Jointures Utilisateur
SELECT DISTINCT uti.UTI_T_LOGIN --rol.ROL_C_CODE, uti.UTI_T_LOGIN
--SELECT DISTINCT rol.ROL_C_CODE
FROM UTILISATEUR.UTILISATEUR uti
JOIN UTILISATEUR.ASS_PRF_UTI apu ON apu.UTI_ID = uti.UTI_ID
JOIN UTILISATEUR.PROFIL prf ON prf.PRF_ID = apu.PRF_ID
JOIN UTILISATEUR.ROLE rol ON rol.ROL_ID = prf.ROL_ID
--JOIN ENTITE ent ON ent.ENT_ID = prf.ENT_ID
--JOIN UTILISATEUR.ASS_HAB_ROL ahr ON  ahr.ROL_ID = rol.ROL_ID
--JOIN UTILISATEUR.HABILITATION hab ON hab.HAB_ID = ahr.HAB_ID
WHERE 1=1
AND uti.UTI_B_ACTIF = 'O'
AND apu.APU_B_ACTIF = 'O'
AND rol.ROL_C_CODE = 'ROL-DIST-PROD-RACC-A' -- 'ROL-FRN-DEM-GROUPEES' --ROL-FRN-ACCES-EXPORT-PAR-GROUPE, ROL-FRN-ADMINISTRER-AVEC-ENT, ROL-FRN-COMMANDER-UH, ROL-FRN-C1C4-UH-C, ROL-FRN-C2C4-UH-OPPOSITION-C, ROL-FRN-C5-UH-C, ROL-FRN-DEM-GROUPEES, ROL-FRN-EDF-ACCES-FLUX, ROL-FRN-RECLA-GRDF-UH-C
AND uti.UTI_T_LOGIN LIKE '%@erdf-grdf.fr'
--AND uti.UTI_T_LOGIN = 'beatrice.edon@erdf-grdf.fr'
AND LENGTH(uti.UTI_T_LOGIN) < 30
ORDER BY 1
;

--Sujet communes
SELECT *
FROM AFFAIRE.AFFAIRE
WHERE PDM_ID = '06284370378095'
;

SELECT aff.PDM_ID "ID PDL", aff.AFF_D_CREATION, prs.PRS_C_CODE, aff.AFF_T_DISCO, aff.XAFF_R_MEDIA_RECEPTION "Média", aff.COM_ID, cme.OLD_ID, cme.COM_C_CODE_INSEE "CODE INSEE", cme.COM_T_LIB
FROM AFFAIRE.AFFAIRE aff
JOIN CONTRAT.COMMUNE cme ON aff.COM_ID = cme.COM_ID
JOIN CONTRAT.PRESTATION prs ON aff.PRS_ID = prs.PRS_ID
WHERE PDM_ID = '06284370378095'
AND AFF_B_MVT = 'O'
ORDER BY AFF_D_CREATION DESC
;

---Check version--
SELECT * FROM TECHNIQUE.VERSION
WHERE VER_T_VERSION_SGE IS NOT NULL
AND VER_T_VERSION_SGE NOT LIKE '9012%'
ORDER BY VER_T_VERSION_SGE DESC
;

--Variables Export (Syndzilla)
SELECT distinct dex_c_code, fex_n_ordre, fex_t_titre, var_c_code, v.* 
FROM formulaire.definition_export d, 
formulaire.format_export f, 
formulaire.ass_fex_var a, 
formulaire.VARIABLE v
WHERE f.fex_k_dex = d.dex_id 
AND f.fex_id = a.fex_id 
AND a.var_id = v.var_id 
AND d.dex_c_code LIKE '%EXT%M018%' -- Mettre ici l'export souhaité 
ORDER BY 1, 2, 3

--Transco stream MEDIA
SELECT * FROM SGEL_TRV_SCH.T_TRANSCODIFICATION WHERE TRA_CODE = 'SGELPRSMEDIASGE'

-- Stats prod retours DISCO
SELECT COUNT(1), K_RETOUR_DISWS FROM
(SELECT AFF_T_DISCO,
MAX(CASE WHEN var.VAR_C_CODE =  'K_RETOUR_DISWS' THEN info.VAR_T_DATA END) as K_RETOUR_DISWS
FROM SUIVI.DEMANDE dem
JOIN SUIVI.NATURE nat on dem.DEM_K_NAT = nat.NAT_ID
JOIN AFFAIRE.INFO_VARIABLE info ON info.AFF_ID = dem.DEM_ID 
JOIN AFFAIRE.VARIABLE var ON info.VAR_ID = var.VAR_ID
WHERE 1=1
AND NAT_C_TYPE = 'F140'
AND NAT_C_SOUS_TYPE = 'F140B1'
AND (var.VAR_C_CODE =  'K_RETOUR_DISWS')
AND DEM_D_DEMANDE > '01/01/2015'
AND DEM_D_DEMANDE < '05/01/2015'
GROUP BY AFF_T_DISCO)
GROUP BY K_RETOUR_DISWS
ORDER BY 1 DESC
;

-- Stats prod retours DISCO (optimisée)
SELECT COUNT(1), K_RETOUR_DISWS, T_RETOUR_DISWS
FROM
(
	SELECT K_RETOUR_DISWS,
	CASE
  WHEN T_RETOUR_DISWS LIKE 'PDL EN COURS D''UTILISATION PAR UN AUTRE UTILISATEUR%' THEN 'PDL EN COURS D''UTILISATION PAR UN AUTRE UTILISATEUR'
  WHEN T_RETOUR_DISWS LIKE 'ERREUR VALIDATION INDEX NECESSITANT CONFIRMATION%' THEN 'ERREUR VALIDATION INDEX NECESSITANT CONFIRMATION'
  WHEN T_RETOUR_DISWS LIKE 'ERREUR VALIDATION IFE%' THEN 'ERREUR VALIDATION IFE'
  WHEN T_RETOUR_DISWS LIKE 'ERREUR VALIDATION MF%LA CONSOMMATION%' THEN 'ERREUR VALIDATION MF : CONSOMMATION INDUITE TROP ELEVEE'
  ELSE T_RETOUR_DISWS END AS T_RETOUR_DISWS
	FROM
	(
		SELECT AFF_T_DISCO,
		MAX(CASE WHEN info.VAR_ID = 200117 THEN info.VAR_T_DATA END) as K_RETOUR_DISWS,
		MAX(CASE WHEN info.VAR_ID = 200118 THEN info.VAR_T_DATA END) as T_RETOUR_DISWS
		FROM SUIVI.DEMANDE dem
		JOIN AFFAIRE.INFO_VARIABLE info ON info.AFF_ID = dem.DEM_ID 
		WHERE 1=1
		AND DEM_K_NAT = 8647
		AND (info.VAR_ID =  200117 OR info.VAR_ID =  200118)
		AND DEM_D_DEMANDE > '01/01/2016'
		GROUP BY AFF_T_DISCO
	)
)
GROUP BY K_RETOUR_DISWS, T_RETOUR_DISWS
ORDER BY 1 DESC
;

SELECT * FROM AFFAIRE.VARIABLE
WHERE VAR_C_CODE = 'K_RETOUR_DISWS'
;

SELECT * FROM SUIVI.NATURE nat
WHERE NAT_C_TYPE = 'F140'
AND NAT_C_SOUS_TYPE = 'F140B1'
;

--Volumétrie variables SAF
SELECT COUNT(1) FROM
 (
  SELECT AFF_T_DISCO,
  MAX(CASE WHEN info.VAR_ID = 200452 THEN info.VAR_T_DATA END) as B_MODIF_BRANCHEMENT
  FROM SUIVI.DEMANDE dem
  JOIN AFFAIRE.INFO_VARIABLE info ON info.AFF_ID = dem.DEM_ID 
  WHERE 1=1
  AND DEM_K_NAT = 8624
  AND info.VAR_ID =  200452
  AND DEM_D_DEMANDE > '01/01/2016'
  AND DEM_D_DEMANDE < '01/02/2016'
  GROUP BY AFF_T_DISCO
 )
WHERE B_MODIF_BRANCHEMENT = 'O' --'B_AUTORELEVE_AR'
;

--Codes tarif DISCO
SELECT cta.CTA_N_CODE_TARIF, fta.FTA_C_CODE, cut.CUT_C_CODE, sco.SCO_T_LIB, pso.PSO_T_LIB, cta.PRS_C_CODE, cta.POP_C_CODE, cta.CTA_R_FAISABILITE, cta.CTA_C_CAT_CLIENT, cta.CTA_D_DEBUT, cta.CTA_D_FIN, cta.CTA_B_ACTIF
FROM DISCO.CODE_TARIF cta
JOIN DISCO.STRUCTURE_COMPTAGE sco ON cta.SCO_ID = sco.SCO_ID
JOIN DISCO.FORMULE_TARIFAIRE fta ON cta.FTA_ID = fta.FTA_ID
JOIN DISCO.PUISSANCE_SOUSCRITE pso ON cta.PSO_ID = pso.PSO_ID
LEFT JOIN DISCO.CONTEXTE_UTILISATION cut ON CTA.CUT_ID = cut.CUT_ID
WHERE 1=1
AND cta.CTA_B_ACTIF = 'O'
--AND SCO_T_LIB = 'Structure avec 6 cadrans'
--AND cta.CTA_C_CAT_CLIENT = 'RES'
--AND CTA_N_CODE_TARIF = '5203'
ORDER BY cta.CTA_N_CODE_TARIF, pso.PSO_T_LIB, cta.PRS_C_CODE
;

--Codes retour DISCO
SELECT * FROM DISCO.MESSAGE_RETOUR_DISCO_4_0 mrd
JOIN DISCO.CODE_RETOUR_DISCO_4_0 crd ON mrd.CRD_ID = crd.CRD_ID
JOIN DISCO.PROCESSUS_DISCO prd ON prd.PRD_ID = crd.PRD_ID
;